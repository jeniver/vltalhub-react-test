{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\vltalhub-react-test\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GetUserInfo, GetUserAge } from \"./Action/UserActions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Moment from \"moment\";\nimport { Grid, Typography, Button, Card, CardActionArea, CardContent, CardMedia } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    marginRight: 20\n  },\n  media: {\n    height: 140\n  },\n  conatiner: {\n    display: \"flex\"\n  }\n});\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [userName1, setUserName1] = useState(\"\");\n  const userSates = useSelector(state => state.userinfo);\n  const userAge = useSelector(state => state.userAge);\n\n  const handleSerchUser = () => dispatch(GetUserInfo(3, \"dk\"));\n\n  const handleAge = () => dispatch(GetUserAge(userName1));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => handleSerchUser(),\n          children: \"serch Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: () => handleAge(),\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), userSates.userinfo && /*#__PURE__*/_jsxDEV(Grid, {\n          className: classes.conatiner,\n          children: userSates.userinfo.results.map((val, Index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: classes.root,\n                children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n                  children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                    className: classes.media,\n                    image: val.picture.medium,\n                    title: \"Contemplative Reptile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      gutterBottom: true,\n                      variant: \"h5\",\n                      component: \"h2\",\n                      children: val.name.first + val.name.last\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"textSecondary\",\n                      component: \"p\",\n                      children: Moment(val.dob && val.dob.date).format(\"DD-MMM-YYYY\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"textSecondary\",\n                      component: \"p\",\n                      children: val.location.city\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"textSecondary\",\n                      component: \"p\",\n                      children: val.gender\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"NX5vyRNBfSxTJUWOWKVRlW79pDw=\", false, function () {\n  return [useDispatch, useStyles, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/DELL/Documents/vltalhub-react-test/src/App.tsx"],"names":["React","useState","Container","useDispatch","useSelector","GetUserInfo","GetUserAge","makeStyles","Moment","Grid","Typography","Button","Card","CardActionArea","CardContent","CardMedia","useStyles","root","maxWidth","marginRight","media","height","conatiner","display","App","dispatch","classes","userName1","setUserName1","userSates","state","userinfo","userAge","handleSerchUser","handleAge","results","map","val","Index","picture","medium","name","first","last","dob","date","format","location","city","gender"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootStore } from \"./Store\";\nimport { GetUserInfo, GetUserAge } from \"./Action/UserActions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Moment from \"moment\";\nimport {\n  Grid,\n  Typography,\n  Button,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    marginRight: 20,\n  },\n  media: {\n    height: 140,\n  },\n  conatiner: {\n    display: \"flex\",\n  },\n});\n\nfunction App() {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [userName1, setUserName1] = useState(\"\");\n  const userSates = useSelector((state: RootStore) => state.userinfo);\n  const userAge = useSelector((state: RootStore) => state.userAge);\n  const handleSerchUser = () => dispatch(GetUserInfo(3, \"dk\"));\n  const handleAge = () => dispatch(GetUserAge(userName1));\n\n  return (\n    <div className=\"App\">\n      <React.Fragment>\n        <Container maxWidth=\"lg\">\n        <Button variant=\"contained\" color=\"primary\"  onClick={() => handleSerchUser()}>serch Users</Button>\n        <Button variant=\"contained\" color=\"secondary\" onClick={() => handleAge()}>Age</Button>\n          {userSates.userinfo && (\n            <Grid className={classes.conatiner}>\n              {userSates.userinfo.results.map((val, Index) => {\n                return (\n                  <div>\n                    <Card className={classes.root}>\n                      <CardActionArea>\n                        <CardMedia\n                          className={classes.media}\n                          image={val.picture.medium}\n                          title=\"Contemplative Reptile\"\n                        />\n                        <CardContent>\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {val.name.first + val.name.last}\n                          </Typography>\n                          <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            component=\"p\"\n                          >\n                            {Moment(val.dob && val.dob.date).format(\n                              \"DD-MMM-YYYY\"\n                            )}\n                          </Typography>\n                          <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            component=\"p\"\n                          >\n                            {val.location.city}\n                          </Typography>\n                          <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            component=\"p\"\n                          >\n                            {val.gender}\n                          </Typography>\n                        </CardContent>\n                      </CardActionArea>\n                    </Card>\n                  </div>\n                );\n              })}\n            </Grid>\n          )}\n        \n        \n        </Container>\n      </React.Fragment>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}